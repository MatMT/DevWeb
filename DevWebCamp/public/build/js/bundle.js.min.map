{"version":3,"sources":["hora.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","horasDisponibles","hora","removeEventListener","seleccionarHora","addEventListener","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonetes","ponenteHidden","seleccionarPonente","ponente","ponenteAnterior","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => {\r\n            dia.addEventListener('change', terminoBusqueda)\r\n        });\r\n\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selectode horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            // Deshabilitar la hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--selected');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n\r\n            // Mientras algún campó este vacío\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            // Función asíncrona al consultar API\r\n            buscarEventos();\r\n        }\r\n\r\n        // Función asíncrona al consultar API\r\n        async function buscarEventos() {\r\n            const { categoria_id, dia } = busqueda;\r\n\r\n            const url =\r\n                `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        // Se determinan las horas disponibles en base a la consulta\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas -----\r\n\r\n            // Se toman los elemenot LI\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n\r\n            // Comprobrar eventos ya tomados y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            // Se convierte el NodeList en un Array\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            // Se filtra negando el elemento que ya ha sido tomado\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            // Se retira la clase de deshabilitada\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            // Selector Css de los elementos sin la clase deshabilitada\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n\r\n            const horasDeshabilitadas = document.querySelectorAll('.horas__hora--deshabilitada');\r\n\r\n            horasDeshabilitadas.forEach(hora => hora.removeEventListener('click', seleccionarHora));\r\n\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--selected');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n            // Agrear una clase\r\n            const liSeleccionado = e.target;\r\n            liSeleccionado.classList.add(\"horas__hora--selected\")\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de día\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonetes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        };\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            // Retorna un Arrelgo de objetos formateados\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                // Bandera, ignora upper/lower case\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while (listadoPonetes.firstChild) {\r\n                listadoPonetes.removeChild(listadoPonetes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // Añadir al DOM\r\n                    listadoPonetes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultados');\r\n                noResultados.textContent = \"No hay resultados para tu búsqueda\";\r\n\r\n                // Añadir al DOM \r\n                listadoPonetes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover ponente anterior\r\n            const ponenteAnterior = document.querySelector('.listado-ponentes__ponente--selected');\r\n\r\n            if (ponenteAnterior) {\r\n                ponenteAnterior.classList.remove('listado-ponentes__ponente--selected');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--selected');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if (e.keyCode == 44) {\r\n                e.preventDefault();\r\n\r\n                if (e.target.value.trim() === '' || e.target.value.length < 1) {\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarTags() { // ==== DOM SCRIPTING ====\r\n            tagsDiv.textContent = \"\";\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n\r\n                // Función disponible por Scripting\r\n                etiqueta.ondblclick = eliminarTag;\r\n\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            // Convertir el arreglo en String\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            // Se elimina del DOM\r\n            e.target.remove();\r\n\r\n            // Se elimina del arreglo\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n    }\r\n}())"]}