{"version":3,"sources":["hora.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","horasDisponibles","hora","removeEventListener","seleccionarHora","obtenerHorasDisponibles","json","id","horaSelected","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonetes","ponenteHidden","seleccionarPonente","ponente","ponenteAnterior","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => {\r\n            dia.addEventListener('change', terminoBusqueda)\r\n        });\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        // Si el objeto con los términos de búsqueda tiene algo\r\n        if (!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                // Esperar la respuesta de la función asíncrona\r\n                await buscarEventos();\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSelected = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n\r\n                horaSelected.classList.remove('horas__hora--deshabilitada');\r\n                horaSelected.classList.add('horas__hora--selected');\r\n                horaSelected.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selectode horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            // Deshabilitar la hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--selected');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n\r\n            // Mientras algún campó este vacío\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            // Función asíncrona al consultar API\r\n            buscarEventos();\r\n        }\r\n\r\n        // Función asíncrona al consultar API\r\n        async function buscarEventos() {\r\n            const { categoria_id, dia } = busqueda;\r\n\r\n            const url =\r\n                `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        // Se determinan las horas disponibles en base a la consulta\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas -----\r\n\r\n            // Se toman los elemenot LI\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n\r\n            // Comprobrar eventos ya tomados y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            // Se convierte el NodeList en un Array\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            // Se filtra negando el elemento que ya ha sido tomado\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            // Se retira la clase de deshabilitada\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            // Selector Css de los elementos sin la clase deshabilitada\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n\r\n            const horasDeshabilitadas = document.querySelectorAll('.horas__hora--deshabilitada');\r\n\r\n            horasDeshabilitadas.forEach(hora => hora.removeEventListener('click', seleccionarHora));\r\n\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--selected');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--selected');\r\n            }\r\n\r\n            // Agrear una clase\r\n            const liSeleccionado = e.target;\r\n            liSeleccionado.classList.add(\"horas__hora--selected\")\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de día\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonetes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if (ponenteHidden.value) {\r\n            (async () => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                // Insertar en el DOM\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--selected');\r\n                ponenteDOM.textContent = `${ponente.nombre.trim()} ${ponente.apellido.trim()}`;\r\n\r\n\r\n                listadoPonetes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        };\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            // Retorna un Arrelgo de objetos formateados\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                // Bandera, ignora upper/lower case\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while (listadoPonetes.firstChild) {\r\n                listadoPonetes.removeChild(listadoPonetes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // Añadir al DOM\r\n                    listadoPonetes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultados');\r\n                noResultados.textContent = \"No hay resultados para tu búsqueda\";\r\n\r\n                // Añadir al DOM \r\n                listadoPonetes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover ponente anterior\r\n            const ponenteAnterior = document.querySelector('.listado-ponentes__ponente--selected');\r\n\r\n            if (ponenteAnterior) {\r\n                ponenteAnterior.classList.remove('listado-ponentes__ponente--selected');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--selected');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if (e.keyCode == 44) {\r\n                e.preventDefault();\r\n\r\n                if (e.target.value.trim() === '' || e.target.value.length < 1) {\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarTags() { // ==== DOM SCRIPTING ====\r\n            tagsDiv.textContent = \"\";\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n\r\n                // Función disponible por Scripting\r\n                etiqueta.ondblclick = eliminarTag;\r\n\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            // Convertir el arreglo en String\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            // Se elimina del DOM\r\n            e.target.remove();\r\n\r\n            // Se elimina del arreglo\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n    }\r\n}())"]}